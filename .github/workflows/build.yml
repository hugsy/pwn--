name: CI Build for MSVC

env:
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  PROJECT_NAME: "pwn++"
  REPO: hugsy/pwn--
  VERBOSE: "1"
  CMAKE_FLAGS: "-DPWN_INCLUDE_ASSEMBLER=OFF -DPWN_INCLUDE_DISASSEMBLER=ON -DPWN_BUILD_TOOLKIT=ON -DPWN_BUILD_TESTING=ON"

on: push

jobs:
  mini_build:
    name: "${{ matrix.os }}/${{ matrix.platform }}/${{ matrix.configuration }}"

    strategy:
      fail-fast: false
      matrix:
        os: ['windows-2022'] # 'linux-latest' removed since gcc-11 nor clang-15 supports std::format
        platform: ['x64', 'x86'] # doesn't work with microsoft/setup-msbuild
        configuration: ['Debug', 'RelWithDebInfo']
        include:
          - runs-on: ubuntu-latest
            c_compiler: clang-16
            cpp_compiler: clang++-16

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Sets Windows specific environment variables
      shell: powershell
      run: |
        echo "NB_CPU=$env:NUMBER_OF_PROCESSORS" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      if: matrix.os == 'windows-latest'

    - name: Sets Linux specific environment variables
      if: matrix.os == 'ubuntu-latest'
      env:
        CC:  ${{ matrix.c_compiler}}
        CXX: ${{ matrix.cpp_compiler}}
      run: |
        echo "NB_CPU=$(grep -c ^processor /proc/cpuinfo)" >> $GITHUB_ENV
        sudo apt update && sudo apt install -y ${CC} ${CXX}
        echo "CC=${CC}" >> $GITHUB_ENV
        echo "CXX=${CXX}" >> $GITHUB_ENV

    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x

    - name: Initialize CodeQL
      if: matrix.os == 'ubuntu-latest'
      uses: github/codeql-action/init@v1
      with:
        languages: cpp

    - name: Add msbuild to PATH
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1.1
      with:
        msbuild-architecture: ${{ matrix.platform }}

    - name: Prepare Windows environment
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        New-Item -ItemType SymbolicLink -Target "..\pwn--" -Path "..\pwn++" -ErrorAction Continue

    - name: Prepare Linux environment
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: |
        ln -s ../pwn++ ../pwn--

    - name: Build pwn++ library
      run: |
        mkdir ./build
        cd ./build
        cmake .. ${{ env.CMAKE_FLAGS }}
        cmake --build . --verbose --parallel ${{ env.NB_CPU }} --config ${{ matrix.configuration }}
        cd ..

    - name: Run tests
      run: |
        cd build/tests
        ctest --parallel ${{ env.NB_CPU }} --progress --extra-verbose --build-config ${{ matrix.configuration }}
        cd ../..

    - name: Perform CodeQL Analysis
      if: matrix.os == 'ubuntu-latest'
      uses: github/codeql-action/analyze@v1

    - name: Prepare artifact
      run: |
        mkdir artifact
        cd build
        cmake --install . --config ${{ matrix.configuration }} --prefix ../artifact --verbose
        cd ..

    - name: Publish artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PROJECT_NAME }}_${{ matrix.platform }}_${{ env.GITHUB_REF_SLUG }}_${{ matrix.os }}_${{ matrix.configuration }}_${{ env.GITHUB_SHA_SHORT }}
        path: artifact/

    - name: Notify on success
      if: ${{ success() }}
      env:
        COMMIT_URL: "https://github.com/${{ env.REPO }}/commit/${{ env.GITHUB_SHA_SHORT }}"
        RUN_URL: "https://github.com/${{ env.REPO }}/actions/runs/${{ github.run_id }}"
      uses: sarisia/actions-status-discord@v1
      with:
        nodetail: true
        title: SUCCESS building `${{ env.REPO }}` for `${{ matrix.os }}-${{ matrix.platform }}`/${{ matrix.configuration }}
        description: |
          [Job #${{ github.run_number }}] The CI build `${{ env.GITHUB_SHA_SHORT }}` initiated by ${{ env.GITHUB_ACTOR }} on ${{ env.GITHUB_REPOSITORY }} succeeded:
          ● Commit ${{ env.COMMIT_URL }}
          ● Branch `${{ env.GITHUB_REF_SLUG }}`
          ● Platform ${{ matrix.os }}-${{ matrix.platform }}
          ● Configuration ${{ matrix.configuration }}
          ● Run details: ${{ env.RUN_URL }}
        color: 0x00ff00
        username: ${{ github.actor }} via GithubBot
        avatar_url: ${{ github.actor.avatar_url }}

    - name: Notify on test failure
      if: ${{ failure() }}
      env:
        COMMIT_URL: "https://github.com/${{ env.REPO }}/commit/${{ env.GITHUB_SHA_SHORT }}"
        RUN_URL: "https://github.com/${{ env.REPO }}/actions/runs/${{ github.run_id }}"
      uses: sarisia/actions-status-discord@v1
      with:
        nodetail: true
        title: FAILED building `${{ env.REPO }}` for `${{ matrix.os }}-${{ matrix.platform }}`/${{ matrix.configuration }}
        description: |
          [Job #${{ github.run_number }}] The CI build `${{ env.GITHUB_SHA_SHORT }}` initiated by ${{ env.GITHUB_ACTOR }} on ${{ env.GITHUB_REPOSITORY }} failed:
          ● Commit ${{ env.COMMIT_URL }}
          ● Branch `${{ env.GITHUB_REF_SLUG }}`
          ● Platform  ${{ matrix.os }}-${{ matrix.platform }}
          ● Configuration ${{ matrix.configuration }}
          ● Run details: ${{ env.RUN_URL }}
        color: 0xff0000
        username: ${{ github.actor }} via GithubBot
        avatar_url: ${{ github.actor.avatar_url }}
