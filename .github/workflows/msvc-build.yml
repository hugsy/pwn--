name: CI Build for MSVC

env:
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  REPO: hugsy/pwn--
  RUN_URL: "https://github.com/hugsy/pwn--/actions/"
  NB_CPU: "$env:NUMBER_OF_PROCESSORS"
  VCPKG_INSTALL_PATH: "$env:VCPKG_INSTALLATION_ROOT/installed"

on: [push, pull_request]

jobs:
  build:
    name: "Building pwn++ for ${{ matrix.configuration }}/${{ matrix.platform }}"

    strategy:
      fail-fast: true
      matrix:
        os: ['windows-latest']
        platform: ['x86', 'x64']
        configuration: ['Release']

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2

    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x

    - uses: actions/cache@v1
      id: vcpkg_cache
      env:
        cache-name: cache-deps
      with:
       key: ${{ runner.os }}-vcpkg-${{ matrix.platform }}-${{ hashFiles('**/PACKAGES') }}
       path: |
          ${{ env.VCPKG_INSTALL_PATH }}
       restore-keys:
          ${{ runner.os }}-vcpkg-${{ env.cache-name }}-
          ${{ runner.os }}-vcpkg-
          ${{ runner.os }}-${{ env.cache-name }}-
          ${{ runner.os }}-

    - name: Install vcpkg
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        vcpkg integrate install

    - name: Install dependencies
      if: matrix.os == 'windows-latest' && steps.vcpkg_cache.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        vcpkg install keystone:${{ matrix.platform }}-windows-static
        vcpkg install capstone[x86,arm,arm64]:${{ matrix.platform }}-windows-static

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: cpp

    - name: Build pwn++ dll
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        Import-Module .\.github\Invoke-VS.ps1
        New-Item -ItemType SymbolicLink -Target "..\pwn--" -Path "..\pwn++" -ErrorAction Continue
        Invoke-VisualStudio2019${{ matrix.platform }}
        New-Item -Type Directory -Name build
        Set-Location .\build
        cmake ..\src
        msbuild.exe ALL_BUILD.vcxproj -nologo /maxCpuCount:${{ env.NB_CPU }} /verbosity:n /m /p:Configuration=${{ matrix.configuration }} /p:Platform=${{ matrix.platform }}
        Set-Location ..


    - name: Run Windows tests
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        Copy-Item -Verbose pwn++\build\pwn++\win\${{ matrix.configuration }}\pwn++.dll pwn++\tests\${{ matrix.configuration }}\
        pwn++\tests\unit_tests.exe


    - name: Perform CodeQL Analysis
      if: ${{ success() }}
      uses: github/codeql-action/analyze@v1


    - name: Prepare Windows artifact
      id: prepare_artifact
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        New-Item -Type Directory -Name artifact\
        Copy-Item -Verbose pwn++\build\pwn++\win\${{ matrix.configuration }}\pwn++.lib artifact\
        Copy-Item -Verbose pwn++\build\pwn++\win\${{ matrix.configuration }}\pwn++.dll artifact\
        Copy-Item -Verbose pwn++\build\pwn++\win\${{ matrix.configuration }}\pwn++.pdb artifact\
        New-Item -Type Directory -Name artifact\include\
        New-Item -Type Directory -Name artifact\include\win\
        Copy-Item pwn++\src\inc\*.hpp artifact\include\
        Copy-Item pwn++\src\inc\win\*.hpp artifact\include\win\

    - name: Publish artifact
      id: publish_artifact
      uses: actions/upload-artifact@v2
      with:
        name: pwn++_${{ env.GITHUB_REF_SLUG }}_${{ matrix.platform }}_${{ env.GITHUB_SHA_SHORT }}
        path: artifact/

    - name: Notify on success
      if: ${{ success() }}
      uses: sarisia/actions-status-discord@v1
      with:
        nodetail: true
        title: Build `${{ github.ref }}` succeeded
        description: |
          [Job:${{ github.run_number }}] `${{ env.GITHUB_SHA_SHORT }}` in `${{ env.GITHUB_REF_SLUG }}` was built with success for ${{ matrix.platform }}/${{ matrix.configuration }}

          ---
          See ${{ env.RUN_URL }} for details
        color: 0x00ff00
        username: ${{ github.actor }} via GithubBot
        avatar_url: ${{ github.actor.avatar_url }}

    - name: Notify on test failure
      if: ${{ failure() }}
      uses: sarisia/actions-status-discord@v1
      with:
        nodetail: true
        title: CI build failed on `${{ github.ref }}`
        description: |
          [Job:${{ github.run_number }}] Failed to build `${{ env.GITHUB_SHA_SHORT }}` in `${{  env.GITHUB_REF_SLUG }}` for ${{ matrix.platform }}/${{ matrix.configuration }}

          ---
          See ${{ env.RUN_URL }} for details
        color: 0xff0000
        username: ${{ github.actor }} via GithubBot
        avatar_url: ${{ github.actor.avatar_url }}