name: CI Build for MSVC

env:
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  REPO: hugsy/pwn--
  RUN_URL: "https://github.com/hugsy/pwn--/actions/"
  NB_CPU: "$env:NUMBER_OF_PROCESSORS"
  VCPKG_INSTALL_PATH: "$env:VCPKG_INSTALLATION_ROOT/installed"

on: [push, pull_request]

jobs:
  build:
    name: "Building pwn++ for ${{ matrix.configuration }}/${{ matrix.platform }}"
    runs-on: windows-latest

    strategy:
      fail-fast: true
      matrix:
        platform: ['x86', 'x64']
        configuration: ['Release']

    steps:
    - uses: actions/checkout@v2

    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x

    - uses: actions/cache@v1
      id: vcpkg_cache
      env:
        cache-name: cache-deps
      with:
       key: ${{ runner.os }}-vcpkg-${{ matrix.platform }}-${{ hashFiles('**/PACKAGES') }}
       path: |
          ${{ env.VCPKG_INSTALL_PATH }}
       restore-keys:
          ${{ runner.os }}-vcpkg-${{ env.cache-name }}-
          ${{ runner.os }}-vcpkg-
          ${{ runner.os }}-${{ env.cache-name }}-
          ${{ runner.os }}-

    - name: Install vcpkg
      shell: pwsh
      run: |
        vcpkg integrate install

    - name: Install dependencies
      if: steps.vcpkg_cache.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        vcpkg install keystone:${{ matrix.platform }}-windows-static
        vcpkg install capstone[x86,arm,arm64]:${{ matrix.platform }}-windows-static

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: cpp

    - name: Build pwn++ dll
      shell: pwsh
      run: |
        Import-Module .\.github\Invoke-VS.ps1
        New-Item -ItemType SymbolicLink -Target "..\pwn--" -Path "..\pwn++" -ErrorAction Continue
        Invoke-VisualStudio2019${{ matrix.platform }}
        msbuild.exe pwn++\pwn++.vcxproj -nologo /maxCpuCount:${{ env.NB_CPU }} /verbosity:n /m /p:Configuration=${{ matrix.configuration }} /p:Platform=${{ matrix.platform }}

    - name: Run tests
      shell: pwsh
      run: |
        Import-Module .\.github\Invoke-VS.ps1
        Invoke-VisualStudio2019${{ matrix.platform }}
        msbuild.exe pwn++-tests\pwn++-tests.vcxproj -nologo /maxCpuCount:${{ env.NB_CPU }} /verbosity:n /m /p:Configuration=${{ matrix.configuration }} /p:Platform=${{ matrix.platform }}
        if ( "${{ matrix.platform }}" -eq "x86" )
        {
          Copy-Item -Verbose pwn++\Win32\${{ matrix.configuration }}\pwn++.dll pwn++-tests\Win32\${{ matrix.configuration }}\
          vstest.console.exe pwn++-tests\Win32\${{ matrix.configuration }}\pwn++-tests.dll
        }
        else
        {
          Copy-Item -Verbose pwn++\${{ matrix.platform }}\${{ matrix.configuration }}\pwn++.dll pwn++-tests\${{ matrix.platform }}\${{ matrix.configuration }}\
          vstest.console.exe pwn++-tests\${{ matrix.platform }}\${{ matrix.configuration }}\pwn++-tests.dll
        }

    - name: Perform CodeQL Analysis
      if: ${{ success() }}
      uses: github/codeql-action/analyze@v1


    - name: Prepare artifact
      id: prepare_artifact
      shell: pwsh
      run: |
        New-Item -Type Directory -Name build\
        if ( "${{ matrix.platform }}" -eq "x86" )
        {
          Copy-Item -Verbose pwn++\Win32\${{ matrix.configuration }}\pwn++.lib build\
          Copy-Item -Verbose pwn++\Win32\${{ matrix.configuration }}\pwn++.dll build\
          Copy-Item -Verbose pwn++\Win32\${{ matrix.configuration }}\pwn++.pdb build\
        }
        else
        {
          Copy-Item -Verbose pwn++\${{ matrix.platform }}\${{ matrix.configuration }}\pwn++.lib build\
          Copy-Item -Verbose pwn++\${{ matrix.platform }}\${{ matrix.configuration }}\pwn++.dll build\
          Copy-Item -Verbose pwn++\${{ matrix.platform }}\${{ matrix.configuration }}\pwn++.pdb build\
        }
        New-Item -Type Directory -Name build\include\
        Copy-Item pwn++\*.h build\include\

    - name: Publish artifact
      id: publish_artifact
      uses: actions/upload-artifact@v2
      with:
        name: pwn++_msvc_${{ env.GITHUB_REF_SLUG }}_${{ matrix.platform }}_${{ env.GITHUB_SHA_SHORT }}
        path: build\

    - name: Notify on success
      if: ${{ success() }}
      uses: sarisia/actions-status-discord@v1
      with:
        nodetail: true
        title: Build `${{ github.ref }}` succeeded
        description: |
          [Job:${{ github.run_number }}] `${{ env.GITHUB_SHA_SHORT }}` in `${{ env.GITHUB_REF_SLUG }}` was built with success for ${{ matrix.platform }}/${{ matrix.configuration }}

          ---
          See ${{ env.RUN_URL }} for details
        color: 0x00ff00
        username: ${{ github.actor }} via GithubBot
        avatar_url: ${{ github.actor.avatar_url }}

    - name: Notify on test failure
      if: ${{ failure() }}
      uses: sarisia/actions-status-discord@v1
      with:
        nodetail: true
        title: CI build failed on `${{ github.ref }}`
        description: |
          [Job:${{ github.run_number }}] Failed to build `${{ env.GITHUB_SHA_SHORT }}` in `${{  env.GITHUB_REF_SLUG }}` for ${{ matrix.platform }}/${{ matrix.configuration }}

          ---
          See ${{ env.RUN_URL }} for details
        color: 0xff0000
        username: ${{ github.actor }} via GithubBot
        avatar_url: ${{ github.actor.avatar_url }}